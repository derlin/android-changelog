apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def getVersion = { -> "1.1" }

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 2
        versionName getVersion()

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

repositories {
    mavenCentral()
}

// -------------- Github upload configuration
// see https://github.com/enefce/AndroidLibraryForGitHubPackagesDemo
apply plugin: 'maven-publish'

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

publishing {
    publications {
        gpr(MavenPublication) {
            groupId 'ch.derlin.android'
            artifactId 'changelog'
            version getVersion()
            artifact("$buildDir/outputs/aar/library-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             */
            url = uri("https://maven.pkg.github.com/derlin/android-changelog")

            credentials {
                /**
                 * Create github.properties in root project folder file with:
                 *   gpr.usr=GITHUB_USER_ID
                 *   gpr.key=PERSONAL_ACCESS_TOKEN
                 * To create the personal access token: Github > Settings > Personal Access Tokens
                 * and ensure it has the write:packages right.
                 * **/
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}